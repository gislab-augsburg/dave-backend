/*
 * DAVE GEODATA EAI
 * DAVE GEODATA EAI - Service zum Abfragen von Geoinformationen
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: unbekannt@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.muenchen.dave.geodateneai.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.muenchen.dave.geodateneai.gen.model.ModelLocalTime;
import java.time.LocalTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MesswerteIntervallMessquerschnittDto
 */
@JsonPropertyOrder({
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_UHRZEIT_VON,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_UHRZEIT_BIS,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_ANZAHL_LFW,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_ANZAHL_KRAD,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_ANZAHL_LKW,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_ANZAHL_BUS,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_ANZAHL_RAD,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_SUMME_ALLE_PKW,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_SUMME_LASTZUG,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_SUMME_GUETERVERKEHR,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_SUMME_SCHWERVERKEHR,
  MesswerteIntervallMessquerschnittDto.JSON_PROPERTY_SUMME_KRAFTFAHRZEUGVERKEHR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MesswerteIntervallMessquerschnittDto {
  public static final String JSON_PROPERTY_UHRZEIT_VON = "uhrzeitVon";
  private LocalTime uhrzeitVon;

  public static final String JSON_PROPERTY_UHRZEIT_BIS = "uhrzeitBis";
  private LocalTime uhrzeitBis;

  public static final String JSON_PROPERTY_ANZAHL_LFW = "anzahlLfw";
  private Integer anzahlLfw;

  public static final String JSON_PROPERTY_ANZAHL_KRAD = "anzahlKrad";
  private Integer anzahlKrad;

  public static final String JSON_PROPERTY_ANZAHL_LKW = "anzahlLkw";
  private Integer anzahlLkw;

  public static final String JSON_PROPERTY_ANZAHL_BUS = "anzahlBus";
  private Integer anzahlBus;

  public static final String JSON_PROPERTY_ANZAHL_RAD = "anzahlRad";
  private Integer anzahlRad;

  public static final String JSON_PROPERTY_SUMME_ALLE_PKW = "summeAllePkw";
  private Integer summeAllePkw;

  public static final String JSON_PROPERTY_SUMME_LASTZUG = "summeLastzug";
  private Integer summeLastzug;

  public static final String JSON_PROPERTY_SUMME_GUETERVERKEHR = "summeGueterverkehr";
  private Integer summeGueterverkehr;

  public static final String JSON_PROPERTY_SUMME_SCHWERVERKEHR = "summeSchwerverkehr";
  private Integer summeSchwerverkehr;

  public static final String JSON_PROPERTY_SUMME_KRAFTFAHRZEUGVERKEHR = "summeKraftfahrzeugverkehr";
  private Integer summeKraftfahrzeugverkehr;

  public MesswerteIntervallMessquerschnittDto() {
  }

  public MesswerteIntervallMessquerschnittDto uhrzeitVon(LocalTime uhrzeitVon) {
    
    this.uhrzeitVon = uhrzeitVon;
    return this;
  }

   /**
   * Get uhrzeitVon
   * @return uhrzeitVon
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UHRZEIT_VON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalTime getUhrzeitVon() {
    return uhrzeitVon;
  }


  @JsonProperty(JSON_PROPERTY_UHRZEIT_VON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUhrzeitVon(LocalTime uhrzeitVon) {
    this.uhrzeitVon = uhrzeitVon;
  }


  public MesswerteIntervallMessquerschnittDto uhrzeitBis(LocalTime uhrzeitBis) {
    
    this.uhrzeitBis = uhrzeitBis;
    return this;
  }

   /**
   * Get uhrzeitBis
   * @return uhrzeitBis
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UHRZEIT_BIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalTime getUhrzeitBis() {
    return uhrzeitBis;
  }


  @JsonProperty(JSON_PROPERTY_UHRZEIT_BIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUhrzeitBis(LocalTime uhrzeitBis) {
    this.uhrzeitBis = uhrzeitBis;
  }


  public MesswerteIntervallMessquerschnittDto anzahlLfw(Integer anzahlLfw) {
    
    this.anzahlLfw = anzahlLfw;
    return this;
  }

   /**
   * Get anzahlLfw
   * @return anzahlLfw
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANZAHL_LFW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAnzahlLfw() {
    return anzahlLfw;
  }


  @JsonProperty(JSON_PROPERTY_ANZAHL_LFW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnzahlLfw(Integer anzahlLfw) {
    this.anzahlLfw = anzahlLfw;
  }


  public MesswerteIntervallMessquerschnittDto anzahlKrad(Integer anzahlKrad) {
    
    this.anzahlKrad = anzahlKrad;
    return this;
  }

   /**
   * Get anzahlKrad
   * @return anzahlKrad
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANZAHL_KRAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAnzahlKrad() {
    return anzahlKrad;
  }


  @JsonProperty(JSON_PROPERTY_ANZAHL_KRAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnzahlKrad(Integer anzahlKrad) {
    this.anzahlKrad = anzahlKrad;
  }


  public MesswerteIntervallMessquerschnittDto anzahlLkw(Integer anzahlLkw) {
    
    this.anzahlLkw = anzahlLkw;
    return this;
  }

   /**
   * Get anzahlLkw
   * @return anzahlLkw
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANZAHL_LKW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAnzahlLkw() {
    return anzahlLkw;
  }


  @JsonProperty(JSON_PROPERTY_ANZAHL_LKW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnzahlLkw(Integer anzahlLkw) {
    this.anzahlLkw = anzahlLkw;
  }


  public MesswerteIntervallMessquerschnittDto anzahlBus(Integer anzahlBus) {
    
    this.anzahlBus = anzahlBus;
    return this;
  }

   /**
   * Get anzahlBus
   * @return anzahlBus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANZAHL_BUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAnzahlBus() {
    return anzahlBus;
  }


  @JsonProperty(JSON_PROPERTY_ANZAHL_BUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnzahlBus(Integer anzahlBus) {
    this.anzahlBus = anzahlBus;
  }


  public MesswerteIntervallMessquerschnittDto anzahlRad(Integer anzahlRad) {
    
    this.anzahlRad = anzahlRad;
    return this;
  }

   /**
   * Get anzahlRad
   * @return anzahlRad
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANZAHL_RAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAnzahlRad() {
    return anzahlRad;
  }


  @JsonProperty(JSON_PROPERTY_ANZAHL_RAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnzahlRad(Integer anzahlRad) {
    this.anzahlRad = anzahlRad;
  }


  public MesswerteIntervallMessquerschnittDto summeAllePkw(Integer summeAllePkw) {
    
    this.summeAllePkw = summeAllePkw;
    return this;
  }

   /**
   * Get summeAllePkw
   * @return summeAllePkw
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUMME_ALLE_PKW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSummeAllePkw() {
    return summeAllePkw;
  }


  @JsonProperty(JSON_PROPERTY_SUMME_ALLE_PKW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummeAllePkw(Integer summeAllePkw) {
    this.summeAllePkw = summeAllePkw;
  }


  public MesswerteIntervallMessquerschnittDto summeLastzug(Integer summeLastzug) {
    
    this.summeLastzug = summeLastzug;
    return this;
  }

   /**
   * Get summeLastzug
   * @return summeLastzug
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUMME_LASTZUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSummeLastzug() {
    return summeLastzug;
  }


  @JsonProperty(JSON_PROPERTY_SUMME_LASTZUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummeLastzug(Integer summeLastzug) {
    this.summeLastzug = summeLastzug;
  }


  public MesswerteIntervallMessquerschnittDto summeGueterverkehr(Integer summeGueterverkehr) {
    
    this.summeGueterverkehr = summeGueterverkehr;
    return this;
  }

   /**
   * Get summeGueterverkehr
   * @return summeGueterverkehr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUMME_GUETERVERKEHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSummeGueterverkehr() {
    return summeGueterverkehr;
  }


  @JsonProperty(JSON_PROPERTY_SUMME_GUETERVERKEHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummeGueterverkehr(Integer summeGueterverkehr) {
    this.summeGueterverkehr = summeGueterverkehr;
  }


  public MesswerteIntervallMessquerschnittDto summeSchwerverkehr(Integer summeSchwerverkehr) {
    
    this.summeSchwerverkehr = summeSchwerverkehr;
    return this;
  }

   /**
   * Get summeSchwerverkehr
   * @return summeSchwerverkehr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUMME_SCHWERVERKEHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSummeSchwerverkehr() {
    return summeSchwerverkehr;
  }


  @JsonProperty(JSON_PROPERTY_SUMME_SCHWERVERKEHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummeSchwerverkehr(Integer summeSchwerverkehr) {
    this.summeSchwerverkehr = summeSchwerverkehr;
  }


  public MesswerteIntervallMessquerschnittDto summeKraftfahrzeugverkehr(Integer summeKraftfahrzeugverkehr) {
    
    this.summeKraftfahrzeugverkehr = summeKraftfahrzeugverkehr;
    return this;
  }

   /**
   * Get summeKraftfahrzeugverkehr
   * @return summeKraftfahrzeugverkehr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUMME_KRAFTFAHRZEUGVERKEHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSummeKraftfahrzeugverkehr() {
    return summeKraftfahrzeugverkehr;
  }


  @JsonProperty(JSON_PROPERTY_SUMME_KRAFTFAHRZEUGVERKEHR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummeKraftfahrzeugverkehr(Integer summeKraftfahrzeugverkehr) {
    this.summeKraftfahrzeugverkehr = summeKraftfahrzeugverkehr;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MesswerteIntervallMessquerschnittDto messwerteIntervallMessquerschnittDto = (MesswerteIntervallMessquerschnittDto) o;
    return Objects.equals(this.uhrzeitVon, messwerteIntervallMessquerschnittDto.uhrzeitVon) &&
        Objects.equals(this.uhrzeitBis, messwerteIntervallMessquerschnittDto.uhrzeitBis) &&
        Objects.equals(this.anzahlLfw, messwerteIntervallMessquerschnittDto.anzahlLfw) &&
        Objects.equals(this.anzahlKrad, messwerteIntervallMessquerschnittDto.anzahlKrad) &&
        Objects.equals(this.anzahlLkw, messwerteIntervallMessquerschnittDto.anzahlLkw) &&
        Objects.equals(this.anzahlBus, messwerteIntervallMessquerschnittDto.anzahlBus) &&
        Objects.equals(this.anzahlRad, messwerteIntervallMessquerschnittDto.anzahlRad) &&
        Objects.equals(this.summeAllePkw, messwerteIntervallMessquerschnittDto.summeAllePkw) &&
        Objects.equals(this.summeLastzug, messwerteIntervallMessquerschnittDto.summeLastzug) &&
        Objects.equals(this.summeGueterverkehr, messwerteIntervallMessquerschnittDto.summeGueterverkehr) &&
        Objects.equals(this.summeSchwerverkehr, messwerteIntervallMessquerschnittDto.summeSchwerverkehr) &&
        Objects.equals(this.summeKraftfahrzeugverkehr, messwerteIntervallMessquerschnittDto.summeKraftfahrzeugverkehr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uhrzeitVon, uhrzeitBis, anzahlLfw, anzahlKrad, anzahlLkw, anzahlBus, anzahlRad, summeAllePkw, summeLastzug, summeGueterverkehr, summeSchwerverkehr, summeKraftfahrzeugverkehr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MesswerteIntervallMessquerschnittDto {\n");
    sb.append("    uhrzeitVon: ").append(toIndentedString(uhrzeitVon)).append("\n");
    sb.append("    uhrzeitBis: ").append(toIndentedString(uhrzeitBis)).append("\n");
    sb.append("    anzahlLfw: ").append(toIndentedString(anzahlLfw)).append("\n");
    sb.append("    anzahlKrad: ").append(toIndentedString(anzahlKrad)).append("\n");
    sb.append("    anzahlLkw: ").append(toIndentedString(anzahlLkw)).append("\n");
    sb.append("    anzahlBus: ").append(toIndentedString(anzahlBus)).append("\n");
    sb.append("    anzahlRad: ").append(toIndentedString(anzahlRad)).append("\n");
    sb.append("    summeAllePkw: ").append(toIndentedString(summeAllePkw)).append("\n");
    sb.append("    summeLastzug: ").append(toIndentedString(summeLastzug)).append("\n");
    sb.append("    summeGueterverkehr: ").append(toIndentedString(summeGueterverkehr)).append("\n");
    sb.append("    summeSchwerverkehr: ").append(toIndentedString(summeSchwerverkehr)).append("\n");
    sb.append("    summeKraftfahrzeugverkehr: ").append(toIndentedString(summeKraftfahrzeugverkehr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

